<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd ">

	<context:component-scan base-package="com.sso.server" />
	<!-- 默认静态资源转交给tomcat处理 -->
	<context:annotation-config />

	<bean name="config" class="com.sso.server.util.Config"
		init-method="refreshConfig" destroy-method="destroy">
		<property name="loginViewName" value="/login" />
		<property name="indexViewName" value="/index" />
		<property name="authenticationHandler">
			<bean class="com.sso.server.service.impl.AuthenticationAndCodeHandlerImpl" />
		</property>
		<property name="preLogHandler">
			<bean class="com.sso.server.service.impl.CaptchaPreLoginHandler" />
		</property>
		<property name="userSerializer">
			<bean class="com.sso.server.service.impl.TestUserSerializer" />
		</property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!-- <property name="jdbcUrl"
			value="jdbc:mysql://218.83.192.100:3306/sharebo?useUnicode=true&amp;characterEncoding=UTF-8" /> -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ssoserver?useUnicode=true&amp;characterEncoding=UTF-8" /> <!-- ?useUnicode=true&amp;characterEncoding=UTF-8 -->
		<property name="user" value="root" />
		<!--<property name="password" value="sharebo558" />-->
		<property name="password" value="123456" />
		<property name="minPoolSize" value="5" /> <!--连接池中保留的最小连接数。 -->
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="5000" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="0" />
		<!--连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出 -->
		<!--SQLEXCEPTION，如果设置0，则无限等待。Default:0 -->
		<property name="checkoutTimeout" value="30000" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- 因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
	<!-- 配置数据库核心工厂; 注入dataSource ;向 sqlSessionFactory提供mybatis的配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation" value="classpath:mybatis.xml" /> -->
		<property name="mapperLocations" value="classpath*:mapper/*Mapper.xml" />
	</bean>
	<!-- 提供sqlSessionFactory;mapper扫描器提供需要扫描的包，有多个包用逗号隔开 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="basePackage" value="com.sso.server.mapper" />
	</bean>
</beans>